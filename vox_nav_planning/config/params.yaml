vox_nav_planner_server_rclcpp_node:
  ros__parameters:
    planner_plugin: "OptimalElevationPlanner"                 # other options: "SE2Planner", "ElevationPlanner", "OptimalElevationPlanner"
    expected_planner_frequency: 1.0
    planner_name: "AnytimePathShortening"              # PRMstar,LazyPRMstar,RRTstar,RRTsharp,RRTXstatic,InformedRRTstar,BITstar, 
                                                       # ABITstar,AITstar,CForest,LBTRRT,SST,TRRT,SPARS,SPARStwo,FMT,AnytimePathShortening
    planner_timeout: 10.0
    interpolation_parameter: 25                         # set to 0 if you wanna disable interpolating and smooting, otherwise 25 is a good default value                    
    octomap_voxel_size: 0.4
    robot_body_dimens:
      x: 1.2
      y: 1.2
      z: 0.8
    #robot_mesh_path: "package://botanbot_description/meshes/base_simplified.stl" # leave empty if you do not have one, robot_mesh_path: ""
    robot_mesh_path: ""
    SE2Planner:
      plugin: "vox_nav_planning::SE2Planner"         # CForest: Reccomended
      se2_space: "REEDS"                             # "DUBINS","REEDS", "SE2" ### PS. Use DUBINS OR REEDS for Ackermann
      z_elevation: 1.5                               # Elevation of robot from ground plane, robot should not collide with plane                                      
      rho: 2.5                                       # Curve radius form reeds and dubins only
      state_space_boundries: 
        minx: -100.0
        maxx: 100.0
        miny: -100.0
        maxy: 100.0
        minyaw: -3.14
        maxyaw: 3.14
    ElevationPlanner: 
      plugin: "vox_nav_planning::ElevationPlanner"    # PRMstar: Reccomended
      se2_space: "SE2"                             # "DUBINS","REEDS", "SE2" ### PS. Use DUBINS OR REEDS for Ackermann
      rho: 2.0                                        # Curve radius for reeds and dubins only
      state_space_boundries:
        minx: -100.0
        maxx:  100.0
        miny: -100.0
        maxy:  100.0
        minz: -5.0
        maxz:  10.0
    OptimalElevationPlanner: 
      plugin: "vox_nav_planning::OptimalElevationPlanner"    # Bases on Astar on SuperVoxelClustering
      se2_space: "SE2"                                     # "DUBINS","REEDS", "SE2" ### PS. Use DUBINS OR REEDS for Ackermann
      rho: 2.0
      graph_search_method: "astar"                           # Other options: astar , dijkstra
      supervoxel_disable_transform: false                    # set true for organized point clouds
      supervoxel_resolution: 0.4
      supervoxel_seed_resolution: 1.5
      supervoxel_color_importance: 0.0
      supervoxel_spatial_importance: 1.0
      supervoxel_normal_importance: 1.0
      distance_penalty_weight: 10.0
      elevation_penalty_weight: 0.0
      state_space_boundries:
        minx: -50.0
        maxx: 50.0
        miny: -50.0
        maxy: 50.0
        minz: -2.0
        maxz: 12.0
